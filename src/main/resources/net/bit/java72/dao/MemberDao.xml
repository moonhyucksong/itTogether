<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.bit.java72.dao.MemberDao">

  <resultMap type="Member"    id="MemberMap">
    <id     column="mno"      property="mno" />
    <result column="email"    property="email"/>
    <result column="nicknm"   property="nickname" />
    <result column="pwd"      property="password" />
    <result column="cre_dt"   property="createDate" />
    <result column="hometwn"  property="hometown"/>
    <result column="lat"      property="latitude"/>
    <result column="lon"      property="longitude"/>
    <result column="addr"     property="address"/>
    <result column="mphoto"   property="profilePicture"/>
    <result column="sex"      property="sex"/>
    <result column="intro"    property="introduction"/>
    <result column="age"      property="age"/>
    <result column="hobby"       property="hobby"/>
    
  </resultMap>
  
  <select id="exist" 
          parameterType="map" resultMap="MemberMap">
    SELECT mno, nicknm, mphoto
    FROM memb_t
    WHERE email=#{email} and pwd=#{password}
  </select>
  
  <select id='getlatlon' parameterType='int' resultMap="MemberMap">
  	SELECT mno, lat, lon 
  	FROM memb_t
  	WHERE mno NOT IN (select frdno from frd_t where mno=#{values} and state = 2) and mno !=#{values}
  </select>
  
  <insert id="signUp" parameterType="Member">
    INSERT INTO MEMB_T(email, nicknm, pwd, cre_dt, name, addr, lat, lon, mphoto) 
    VALUES(#{email}, #{nickname}, #{password}, now(), #{name}, #{address}, #{latitude}, #{longitude}, #{profilePicture})
  </insert>
  
  <select id="getOne" resultMap="MemberMap" parameterType="int">
   SELECT * FROM memb_t where mno=#{values}
  </select>
  
  <select id="countEmail" 
      parameterType="string" 
      resultType="int">
    SELECT count(*)
    FROM memb_t
    WHERE email = #{value}
  </select>
  
  <select id="countNickName" 
      parameterType="string" 
      resultType="int">
    SELECT count(*)
    FROM memb_t
    WHERE nicknm = #{value}
  </select>
  
  <select id="getUserInfo" 
          parameterType="string" resultMap="MemberMap">
    SELECT * 
    FROM memb_t
    WHERE nicknm = #{value}
  </select>
  
  <update id="update" parameterType="Member">
    UPDATE memb_t SET 
      nicknm=#{nickname},
      name=#{name},
      pwd=#{password},
      mphoto=#{profilePicture},
      intro=#{introduction},
      lat=#{latitude},
      lon=#{longitude},
      sex=#{sex},
      age=#{age},
      hobby=#{hobby},
      hometwn=#{hometown},
      addr=#{address},
      lat = #{latitude},
      lon = #{longitude}
    WHERE email = #{email}    
  </update>
  
  <select id="getNickName" parameterType="string" resultMap="MemberMap">
  SELECT mno, nicknm FROM memb_t WHERE email=#{email}
  </select>
  
  
  <!-- 메인지도 내위치 -->
  <select id="getMyLoc" parameterType="int" resultMap="MemberMap">
  SELECT *
  FROM memb_t 
  WHERE mno=#{mno};
  </select>
  
  
   <!-- 내 친구들 정보 가져와서 메인맵에 뿌려줌 -->
  <select id="getFriends" parameterType="int" resultMap="MemberMap">
    SELECT
      t1.mno,
      t1.nicknm, 
      t1.lat, 
      t1.lon, 
      t1.intro, 
      t1.mphoto,
      t1.sex,
      t1.age,
      t1.hobby,
      t1.hometwn
    FROM memb_t t1 JOIN frd_t t2 using(mno)
    WHERE frdno=#{frdno} and state=2;
  </select>
  
  <select id="getFriendMarks" parameterType="int" resultMap="MemberMap">
    SELECT * FROM memb_t where mno = #{value}
  </select>
  
  <!-- 비 친구들 뿌려줌 -->
  <select id="getNoneFriendMarks" parameterType="int" resultMap="MemberMap">
	  SELECT * FROM memb_t where mno = #{value}
  </select>
  
</mapper>

















